<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: analytics | Hackers Gonna Hack]]></title>
  <link href="http://www.jeffknupp.com/blog/categories/analytics/atom.xml" rel="self"/>
  <link href="http://www.jeffknupp.com/"/>
  <updated>2012-07-10T06:02:38-04:00</updated>
  <id>http://www.jeffknupp.com/</id>
  <author>
    <name><![CDATA[Jeff Knupp]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Analytics for Django Sites]]></title>
    <link href="http://www.jeffknupp.com/blog/2012/02/07/analytics-for-django-sites/"/>
    <updated>2012-02-07T22:44:00-05:00</updated>
    <id>http://www.jeffknupp.com/blog/2012/02/07/analytics-for-django-sites</id>
    <content type="html"><![CDATA[<p>This is the first in a series of posts I plan to do over the next month about Analytics and Django. In this post I'll walk through how I began to use a number of analytics tools to
drive decisions about my site, <a href="http://www.illestrhyme.com">IllestRhyme</a>.</p>

<p>One of the first things I did when writing
<a href="http://www.illestrhyme.com">IllestRhyme</a> was to sign up for Google
Analytics. I had never run a web site before, but I was aware of
Google's analytics offering. I admit, for the first few weeks after the
site went live I would start at the Google Analytics page and <strong>hope</strong> to
see users in the Live View. I wasn't really using the data for anything.
I was using Google Analytics as a virtual scoreboard.</p>

<p>It wasn't until I signed up for <a href="http://getclicky.com/66528953">Clicky</a>
that I started to take analytics seriously. In fact, more specifically,
it was when I combined Clicky and
<a href="https://github.com/jcassee/django-analytical">django-analytical</a> that I
really took my first deep-dive into using analytical data for decision
making. Since django-analytical already integrates with a number of
analytics services, including Clicky, setup was a breeze. Sure, I could
have inserted the raw code into my Django templates, but
django-analytical gave me a single point at which to configure all my
analytics services.</p>

<p>More importantly, and I can not stress this enough,
<strong>django-analytical's Clicky integration let me see my users in Clicky via
their contrib.auth usernames</strong>. This was <strong>huge</strong>. Now, instead of
staring at IP addresses, I could follow users on their visit to the site (using
<a href="http://getclicky.com/66528953">Clicky's</a> awesome Spy feature) in
real-time by username. Believe me, nothing will teach you more about you
users than recognizing usernames and their associated behavior patterns.
I could tell which users were hitting the site to check quickly for
updates, which users hung around for a while, and which users <em>used the
site like it was crack</em>. It was this last group that I was initially
interested in.</p>

<!--more-->


<p>I discovered I had about four or five <em>hardcore</em> users, that were on the
site for hours a day. Now, part of that is just personality, but in
addition, <em>something on the site clicked for them</em>. Since I want all my
users on the site for hours a day, I decided to determine what they were
doing in a more rigorous fashion. Naturally, I started coding...</p>

<p>I ended up writing a middleware that tracked a configurable set of users as
they browsed the site and stored this information in the database. I
then processed this information and organized it into "activities". If a
user was going through all the new rhymes submitted and voting on them,
this was 'updating'. If the user was submitting a bunch of new rhymes,
this was 'bulk submitting', etc. After analyzing this information for my
power users and a random sampling of other users, I noticed they were doing one thing more than any other,
which I didn't even have a category for: they were following each other.</p>

<p>This was strange to me, as I didn't think of IllestRhyme as a community.
To me it was more like a tool to get better at rapping. To some of my users, at least, it
was a destination; a way to interact with like-minded people. I quickly
realized the value of this and set to work adding tools that would
encourage this interaction.</p>

<p>Using
<a href="https://bitbucket.org/psam/django-postman/wiki/Home">django-postman</a> I
gave them the ability to send Private Messages. I encouraged commenting
by increasing the amount of Rep (virtual points representing a user's
'reputation' on the site, sort of like StackOverflow) adding comments
was worth. Voting on other users' verses also received a boost.</p>

<p>That's just one example of the ways I use the analytics data I collect
from <a href="http://getclicky.com/66528953">Clicky</a>, Google Analytics, HubSpot,
and the rest to make decisions about my site. In my next Analytics post,
I'll take a look at A/B testing in Django. Stay tuned!</p>

<p>Questions or comments on <em>Analytics for Django Sites</em>? Let me know in the comments below. Also, <a href="http://www.twitter.com/jeffknupp">follow me on Twitter</a> to see all of my blog posts and updates.</p>
]]></content>
  </entry>
  
</feed>
